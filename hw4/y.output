Terminals unused in grammar

   CASE
   CHARACTER_STRING
   CONST
   DIV
   DOWNTO
   EXTERNAL
   FOR
   FORWARD
   GOTO
   IN
   LABEL
   MOD
   NIL
   OTHERWISE
   PACKED
   PFILE
   RECORD
   REPEAT
   SET
   STARSTAR
   TO
   TYPE
   UNTIL
   UPARROW
   WITH
   WRONGIDEN
   ERROR


State 41 conflicts: 1 reduce/reduce


Grammar

    0 $accept: prog $end

    1 $@1: %empty

    2 $@2: %empty

    3 $@3: %empty

    4 $@4: %empty

    5 $@5: %empty

    6 $@6: %empty

    7 prog: PROGRAM id $@1 LPAREN $@2 identifier_list RPAREN $@3 SEMICOLON $@4 declarations subprogram_declarations $@5 compound_statement $@6 DOT

    8 num: DIGSEQ
    9    | REALNUMBER
   10    | MINUS DIGSEQ

   11 id: IDENTIFIER

   12 identifier_list: id
   13                | identifier_list COMMA id

   14 $@7: %empty

   15 declarations: declarations VAR identifier_list COLON type $@7 SEMICOLON
   16             | %empty

   17 type: standard_type
   18     | ARRAY LBRAC num DOTDOT num RBRAC OF type

   19 standard_type: INTEGER
   20              | REAL
   21              | STRING

   22 subprogram_declarations: subprogram_declarations subprogram_declaration SEMICOLON
   23                        | %empty

   24 $@8: %empty

   25 $@9: %empty

   26 subprogram_declaration: subprogram_head $@8 declarations subprogram_declarations $@9 compound_statement

   27 $@10: %empty

   28 $@11: %empty

   29 subprogram_head: FUNCTION id $@10 arguments $@11 COLON standard_type SEMICOLON

   30 $@12: %empty

   31 $@13: %empty

   32 subprogram_head: PROCEDURE id $@12 arguments $@13 SEMICOLON

   33 $@14: %empty

   34 arguments: LPAREN $@14 parameter_list RPAREN
   35          | %empty

   36 parameter_list: optional_var identifier_list COLON type

   37 $@15: %empty

   38 $@16: %empty

   39 parameter_list: optional_var identifier_list COLON type $@15 SEMICOLON $@16 parameter_list

   40 optional_var: VAR
   41             | %empty

   42 $@17: %empty

   43 compound_statement: PBEGIN $@17 optional_statements END

   44 optional_statements: statement_list
   45                    | %empty

   46 statement_list: statement

   47 $@18: %empty

   48 statement_list: statement_list SEMICOLON $@18 statement

   49 statement: variable ASSIGNMENT expression
   50          | procedure_statement
   51          | compound_statement

   52 $@19: %empty

   53 $@20: %empty

   54 $@21: %empty

   55 $@22: %empty

   56 statement: IF $@19 expression $@20 THEN statement $@21 ELSE $@22 statement

   57 $@23: %empty

   58 $@24: %empty

   59 statement: WHILE $@23 expression $@24 DO statement
   60          | %empty

   61 variable: id tail

   62 $@25: %empty

   63 tail: LBRAC expression $@25 RBRAC tail
   64     | %empty

   65 procedure_statement: id

   66 $@26: %empty

   67 procedure_statement: id LPAREN $@26 expression_list RPAREN

   68 expression_list: expression
   69                | expression_list COMMA expression

   70 expression: boolexpression

   71 $@27: %empty

   72 expression: boolexpression $@27 AND boolexpression

   73 $@28: %empty

   74 expression: boolexpression $@28 OR boolexpression

   75 boolexpression: simple_expression
   76               | simple_expression relop simple_expression

   77 simple_expression: term

   78 $@29: %empty

   79 simple_expression: simple_expression addop $@29 term

   80 term: factor

   81 $@30: %empty

   82 term: term mulop $@30 factor

   83 factor: id tail

   84 $@31: %empty

   85 $@32: %empty

   86 factor: id $@31 LPAREN $@32 expression_list RPAREN
   87       | num
   88       | STRINGCONST

   89 $@33: %empty

   90 factor: LPAREN $@33 expression RPAREN
   91       | NOT factor

   92 addop: PLUS
   93      | MINUS

   94 mulop: STAR
   95      | SLASH

   96 relop: LT
   97      | GT
   98      | EQUAL
   99      | LE
  100      | GE
  101      | notEQUAL


Terminals, with rules where they appear

$end (0) 0
error (256)
DIGSEQ <num> (258) 8 10
AND <str> (259) 72
ARRAY <str> (260) 18
ASSIGNMENT <str> (261) 49
CASE <str> (262)
CHARACTER_STRING <str> (263)
COLON <str> (264) 15 29 36 39
COMMA <str> (265) 13 69
CONST <str> (266)
DIV <str> (267)
DO <str> (268) 59
DOT <str> (269) 7
DOTDOT <str> (270) 18
DOWNTO <str> (271)
ELSE <str> (272) 56
END <str> (273) 43
EQUAL <str> (274) 98
EXTERNAL <str> (275)
FOR <str> (276)
FORWARD <str> (277)
FUNCTION <str> (278) 29
GE <str> (279) 100
GOTO <str> (280)
GT <str> (281) 97
IDENTIFIER <str> (282) 11
IF <str> (283) 56
IN <str> (284)
LABEL <str> (285)
LBRAC <str> (286) 18 63
LE <str> (287) 99
LPAREN <str> (288) 7 34 67 86 90
LT <str> (289) 96
MINUS <str> (290) 10 93
MOD <str> (291)
NIL <str> (292)
NOT <str> (293) 91
notEQUAL <str> (294) 101
OF <str> (295) 18
OR <str> (296) 74
OTHERWISE <str> (297)
PACKED <str> (298)
PBEGIN <str> (299) 43
PFILE <str> (300)
PLUS <str> (301) 92
PROCEDURE <str> (302) 32
PROGRAM <str> (303) 7
RBRAC <str> (304) 18 63
RECORD <str> (305)
REPEAT <str> (306)
RPAREN <str> (307) 7 34 67 86 90
SEMICOLON <str> (308) 7 15 22 29 32 39 48
SET <str> (309)
SLASH <str> (310) 95
STAR <str> (311) 94
STARSTAR <str> (312)
THEN <str> (313) 56
TO <str> (314)
TYPE <str> (315)
UNTIL <str> (316)
UPARROW <str> (317)
VAR <str> (318) 15 40
WHILE <str> (319) 59
WITH <str> (320)
STRING <str> (321) 21
WRONGIDEN <str> (322)
ERROR <str> (323)
INTEGER <str> (324) 19
REAL <str> (325) 20
STRINGCONST <str> (326) 88
REALNUMBER <str> (327) 9


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
prog (74)
    on left: 7, on right: 0
$@1 (75)
    on left: 1, on right: 7
$@2 (76)
    on left: 2, on right: 7
$@3 (77)
    on left: 3, on right: 7
$@4 (78)
    on left: 4, on right: 7
$@5 (79)
    on left: 5, on right: 7
$@6 (80)
    on left: 6, on right: 7
num <value> (81)
    on left: 8 9 10, on right: 18 87
id <str> (82)
    on left: 11, on right: 7 12 13 29 32 61 65 67 83 86
identifier_list <type> (83)
    on left: 12 13, on right: 7 13 15 36 39
declarations (84)
    on left: 15 16, on right: 7 15 26
$@7 (85)
    on left: 14, on right: 15
type <type> (86)
    on left: 17 18, on right: 15 18 36 39
standard_type <type> (87)
    on left: 19 20 21, on right: 17 29
subprogram_declarations (88)
    on left: 22 23, on right: 7 22 26
subprogram_declaration (89)
    on left: 26, on right: 22
$@8 (90)
    on left: 24, on right: 26
$@9 (91)
    on left: 25, on right: 26
subprogram_head (92)
    on left: 29 32, on right: 26
$@10 (93)
    on left: 27, on right: 29
$@11 (94)
    on left: 28, on right: 29
$@12 (95)
    on left: 30, on right: 32
$@13 (96)
    on left: 31, on right: 32
arguments (97)
    on left: 34 35, on right: 29 32
$@14 (98)
    on left: 33, on right: 34
parameter_list (99)
    on left: 36 39, on right: 34 39
$@15 (100)
    on left: 37, on right: 39
$@16 (101)
    on left: 38, on right: 39
optional_var (102)
    on left: 40 41, on right: 36 39
compound_statement (103)
    on left: 43, on right: 7 26 51
$@17 (104)
    on left: 42, on right: 43
optional_statements (105)
    on left: 44 45, on right: 43
statement_list (106)
    on left: 46 48, on right: 44 48
$@18 (107)
    on left: 47, on right: 48
statement (108)
    on left: 49 50 51 56 59 60, on right: 46 48 56 59
$@19 (109)
    on left: 52, on right: 56
$@20 (110)
    on left: 53, on right: 56
$@21 (111)
    on left: 54, on right: 56
$@22 (112)
    on left: 55, on right: 56
$@23 (113)
    on left: 57, on right: 59
$@24 (114)
    on left: 58, on right: 59
variable <value> (115)
    on left: 61, on right: 49
tail <value> (116)
    on left: 63 64, on right: 61 63 83
$@25 (117)
    on left: 62, on right: 63
procedure_statement (118)
    on left: 65 67, on right: 50
$@26 (119)
    on left: 66, on right: 67
expression_list <value> (120)
    on left: 68 69, on right: 67 69 86
expression <value> (121)
    on left: 70 72 74, on right: 49 56 59 63 68 69 90
$@27 (122)
    on left: 71, on right: 72
$@28 (123)
    on left: 73, on right: 74
boolexpression <value> (124)
    on left: 75 76, on right: 70 72 74
simple_expression <value> (125)
    on left: 77 79, on right: 75 76 79
$@29 (126)
    on left: 78, on right: 79
term <value> (127)
    on left: 80 82, on right: 77 79 82
$@30 (128)
    on left: 81, on right: 82
factor <value> (129)
    on left: 83 86 87 88 90 91, on right: 80 82 91
$@31 (130)
    on left: 84, on right: 86
$@32 (131)
    on left: 85, on right: 86
$@33 (132)
    on left: 89, on right: 90
addop <str> (133)
    on left: 92 93, on right: 79
mulop <str> (134)
    on left: 94 95, on right: 82
relop <str> (135)
    on left: 96 97 98 99 100 101, on right: 76


State 0

    0 $accept: . prog $end

    PROGRAM  shift, and go to state 1

    prog  go to state 2


State 1

    7 prog: PROGRAM . id $@1 LPAREN $@2 identifier_list RPAREN $@3 SEMICOLON $@4 declarations subprogram_declarations $@5 compound_statement $@6 DOT

    IDENTIFIER  shift, and go to state 3

    id  go to state 4


State 2

    0 $accept: prog . $end

    $end  shift, and go to state 5


State 3

   11 id: IDENTIFIER .

    $default  reduce using rule 11 (id)


State 4

    7 prog: PROGRAM id . $@1 LPAREN $@2 identifier_list RPAREN $@3 SEMICOLON $@4 declarations subprogram_declarations $@5 compound_statement $@6 DOT

    $default  reduce using rule 1 ($@1)

    $@1  go to state 6


State 5

    0 $accept: prog $end .

    $default  accept


State 6

    7 prog: PROGRAM id $@1 . LPAREN $@2 identifier_list RPAREN $@3 SEMICOLON $@4 declarations subprogram_declarations $@5 compound_statement $@6 DOT

    LPAREN  shift, and go to state 7


State 7

    7 prog: PROGRAM id $@1 LPAREN . $@2 identifier_list RPAREN $@3 SEMICOLON $@4 declarations subprogram_declarations $@5 compound_statement $@6 DOT

    $default  reduce using rule 2 ($@2)

    $@2  go to state 8


State 8

    7 prog: PROGRAM id $@1 LPAREN $@2 . identifier_list RPAREN $@3 SEMICOLON $@4 declarations subprogram_declarations $@5 compound_statement $@6 DOT

    IDENTIFIER  shift, and go to state 3

    id               go to state 9
    identifier_list  go to state 10


State 9

   12 identifier_list: id .

    $default  reduce using rule 12 (identifier_list)


State 10

    7 prog: PROGRAM id $@1 LPAREN $@2 identifier_list . RPAREN $@3 SEMICOLON $@4 declarations subprogram_declarations $@5 compound_statement $@6 DOT
   13 identifier_list: identifier_list . COMMA id

    COMMA   shift, and go to state 11
    RPAREN  shift, and go to state 12


State 11

   13 identifier_list: identifier_list COMMA . id

    IDENTIFIER  shift, and go to state 3

    id  go to state 13


State 12

    7 prog: PROGRAM id $@1 LPAREN $@2 identifier_list RPAREN . $@3 SEMICOLON $@4 declarations subprogram_declarations $@5 compound_statement $@6 DOT

    $default  reduce using rule 3 ($@3)

    $@3  go to state 14


State 13

   13 identifier_list: identifier_list COMMA id .

    $default  reduce using rule 13 (identifier_list)


State 14

    7 prog: PROGRAM id $@1 LPAREN $@2 identifier_list RPAREN $@3 . SEMICOLON $@4 declarations subprogram_declarations $@5 compound_statement $@6 DOT

    SEMICOLON  shift, and go to state 15


State 15

    7 prog: PROGRAM id $@1 LPAREN $@2 identifier_list RPAREN $@3 SEMICOLON . $@4 declarations subprogram_declarations $@5 compound_statement $@6 DOT

    $default  reduce using rule 4 ($@4)

    $@4  go to state 16


State 16

    7 prog: PROGRAM id $@1 LPAREN $@2 identifier_list RPAREN $@3 SEMICOLON $@4 . declarations subprogram_declarations $@5 compound_statement $@6 DOT

    $default  reduce using rule 16 (declarations)

    declarations  go to state 17


State 17

    7 prog: PROGRAM id $@1 LPAREN $@2 identifier_list RPAREN $@3 SEMICOLON $@4 declarations . subprogram_declarations $@5 compound_statement $@6 DOT
   15 declarations: declarations . VAR identifier_list COLON type $@7 SEMICOLON

    VAR  shift, and go to state 18

    $default  reduce using rule 23 (subprogram_declarations)

    subprogram_declarations  go to state 19


State 18

   15 declarations: declarations VAR . identifier_list COLON type $@7 SEMICOLON

    IDENTIFIER  shift, and go to state 3

    id               go to state 9
    identifier_list  go to state 20


State 19

    7 prog: PROGRAM id $@1 LPAREN $@2 identifier_list RPAREN $@3 SEMICOLON $@4 declarations subprogram_declarations . $@5 compound_statement $@6 DOT
   22 subprogram_declarations: subprogram_declarations . subprogram_declaration SEMICOLON

    FUNCTION   shift, and go to state 21
    PROCEDURE  shift, and go to state 22

    $default  reduce using rule 5 ($@5)

    $@5                     go to state 23
    subprogram_declaration  go to state 24
    subprogram_head         go to state 25


State 20

   13 identifier_list: identifier_list . COMMA id
   15 declarations: declarations VAR identifier_list . COLON type $@7 SEMICOLON

    COLON  shift, and go to state 26
    COMMA  shift, and go to state 11


State 21

   29 subprogram_head: FUNCTION . id $@10 arguments $@11 COLON standard_type SEMICOLON

    IDENTIFIER  shift, and go to state 3

    id  go to state 27


State 22

   32 subprogram_head: PROCEDURE . id $@12 arguments $@13 SEMICOLON

    IDENTIFIER  shift, and go to state 3

    id  go to state 28


State 23

    7 prog: PROGRAM id $@1 LPAREN $@2 identifier_list RPAREN $@3 SEMICOLON $@4 declarations subprogram_declarations $@5 . compound_statement $@6 DOT

    PBEGIN  shift, and go to state 29

    compound_statement  go to state 30


State 24

   22 subprogram_declarations: subprogram_declarations subprogram_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 31


State 25

   26 subprogram_declaration: subprogram_head . $@8 declarations subprogram_declarations $@9 compound_statement

    $default  reduce using rule 24 ($@8)

    $@8  go to state 32


State 26

   15 declarations: declarations VAR identifier_list COLON . type $@7 SEMICOLON

    ARRAY    shift, and go to state 33
    STRING   shift, and go to state 34
    INTEGER  shift, and go to state 35
    REAL     shift, and go to state 36

    type           go to state 37
    standard_type  go to state 38


State 27

   29 subprogram_head: FUNCTION id . $@10 arguments $@11 COLON standard_type SEMICOLON

    $default  reduce using rule 27 ($@10)

    $@10  go to state 39


State 28

   32 subprogram_head: PROCEDURE id . $@12 arguments $@13 SEMICOLON

    $default  reduce using rule 30 ($@12)

    $@12  go to state 40


State 29

   43 compound_statement: PBEGIN . $@17 optional_statements END

    $default  reduce using rule 42 ($@17)

    $@17  go to state 41


State 30

    7 prog: PROGRAM id $@1 LPAREN $@2 identifier_list RPAREN $@3 SEMICOLON $@4 declarations subprogram_declarations $@5 compound_statement . $@6 DOT

    $default  reduce using rule 6 ($@6)

    $@6  go to state 42


State 31

   22 subprogram_declarations: subprogram_declarations subprogram_declaration SEMICOLON .

    $default  reduce using rule 22 (subprogram_declarations)


State 32

   26 subprogram_declaration: subprogram_head $@8 . declarations subprogram_declarations $@9 compound_statement

    $default  reduce using rule 16 (declarations)

    declarations  go to state 43


State 33

   18 type: ARRAY . LBRAC num DOTDOT num RBRAC OF type

    LBRAC  shift, and go to state 44


State 34

   21 standard_type: STRING .

    $default  reduce using rule 21 (standard_type)


State 35

   19 standard_type: INTEGER .

    $default  reduce using rule 19 (standard_type)


State 36

   20 standard_type: REAL .

    $default  reduce using rule 20 (standard_type)


State 37

   15 declarations: declarations VAR identifier_list COLON type . $@7 SEMICOLON

    $default  reduce using rule 14 ($@7)

    $@7  go to state 45


State 38

   17 type: standard_type .

    $default  reduce using rule 17 (type)


State 39

   29 subprogram_head: FUNCTION id $@10 . arguments $@11 COLON standard_type SEMICOLON

    LPAREN  shift, and go to state 46

    $default  reduce using rule 35 (arguments)

    arguments  go to state 47


State 40

   32 subprogram_head: PROCEDURE id $@12 . arguments $@13 SEMICOLON

    LPAREN  shift, and go to state 46

    $default  reduce using rule 35 (arguments)

    arguments  go to state 48


State 41

   43 compound_statement: PBEGIN $@17 . optional_statements END

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 49
    PBEGIN      shift, and go to state 29
    WHILE       shift, and go to state 50

    END        reduce using rule 45 (optional_statements)
    END        [reduce using rule 60 (statement)]
    SEMICOLON  reduce using rule 60 (statement)
    $default   reduce using rule 45 (optional_statements)

    id                   go to state 51
    compound_statement   go to state 52
    optional_statements  go to state 53
    statement_list       go to state 54
    statement            go to state 55
    variable             go to state 56
    procedure_statement  go to state 57


State 42

    7 prog: PROGRAM id $@1 LPAREN $@2 identifier_list RPAREN $@3 SEMICOLON $@4 declarations subprogram_declarations $@5 compound_statement $@6 . DOT

    DOT  shift, and go to state 58


State 43

   15 declarations: declarations . VAR identifier_list COLON type $@7 SEMICOLON
   26 subprogram_declaration: subprogram_head $@8 declarations . subprogram_declarations $@9 compound_statement

    VAR  shift, and go to state 18

    $default  reduce using rule 23 (subprogram_declarations)

    subprogram_declarations  go to state 59


State 44

   18 type: ARRAY LBRAC . num DOTDOT num RBRAC OF type

    DIGSEQ      shift, and go to state 60
    MINUS       shift, and go to state 61
    REALNUMBER  shift, and go to state 62

    num  go to state 63


State 45

   15 declarations: declarations VAR identifier_list COLON type $@7 . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 46

   34 arguments: LPAREN . $@14 parameter_list RPAREN

    $default  reduce using rule 33 ($@14)

    $@14  go to state 65


State 47

   29 subprogram_head: FUNCTION id $@10 arguments . $@11 COLON standard_type SEMICOLON

    $default  reduce using rule 28 ($@11)

    $@11  go to state 66


State 48

   32 subprogram_head: PROCEDURE id $@12 arguments . $@13 SEMICOLON

    $default  reduce using rule 31 ($@13)

    $@13  go to state 67


State 49

   56 statement: IF . $@19 expression $@20 THEN statement $@21 ELSE $@22 statement

    $default  reduce using rule 52 ($@19)

    $@19  go to state 68


State 50

   59 statement: WHILE . $@23 expression $@24 DO statement

    $default  reduce using rule 57 ($@23)

    $@23  go to state 69


State 51

   61 variable: id . tail
   65 procedure_statement: id .
   67                    | id . LPAREN $@26 expression_list RPAREN

    LBRAC   shift, and go to state 70
    LPAREN  shift, and go to state 71

    ASSIGNMENT  reduce using rule 64 (tail)
    $default    reduce using rule 65 (procedure_statement)

    tail  go to state 72


State 52

   51 statement: compound_statement .

    $default  reduce using rule 51 (statement)


State 53

   43 compound_statement: PBEGIN $@17 optional_statements . END

    END  shift, and go to state 73


State 54

   44 optional_statements: statement_list .
   48 statement_list: statement_list . SEMICOLON $@18 statement

    SEMICOLON  shift, and go to state 74

    $default  reduce using rule 44 (optional_statements)


State 55

   46 statement_list: statement .

    $default  reduce using rule 46 (statement_list)


State 56

   49 statement: variable . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 75


State 57

   50 statement: procedure_statement .

    $default  reduce using rule 50 (statement)


State 58

    7 prog: PROGRAM id $@1 LPAREN $@2 identifier_list RPAREN $@3 SEMICOLON $@4 declarations subprogram_declarations $@5 compound_statement $@6 DOT .

    $default  reduce using rule 7 (prog)


State 59

   22 subprogram_declarations: subprogram_declarations . subprogram_declaration SEMICOLON
   26 subprogram_declaration: subprogram_head $@8 declarations subprogram_declarations . $@9 compound_statement

    FUNCTION   shift, and go to state 21
    PROCEDURE  shift, and go to state 22

    $default  reduce using rule 25 ($@9)

    subprogram_declaration  go to state 24
    $@9                     go to state 76
    subprogram_head         go to state 25


State 60

    8 num: DIGSEQ .

    $default  reduce using rule 8 (num)


State 61

   10 num: MINUS . DIGSEQ

    DIGSEQ  shift, and go to state 77


State 62

    9 num: REALNUMBER .

    $default  reduce using rule 9 (num)


State 63

   18 type: ARRAY LBRAC num . DOTDOT num RBRAC OF type

    DOTDOT  shift, and go to state 78


State 64

   15 declarations: declarations VAR identifier_list COLON type $@7 SEMICOLON .

    $default  reduce using rule 15 (declarations)


State 65

   34 arguments: LPAREN $@14 . parameter_list RPAREN

    VAR  shift, and go to state 79

    $default  reduce using rule 41 (optional_var)

    parameter_list  go to state 80
    optional_var    go to state 81


State 66

   29 subprogram_head: FUNCTION id $@10 arguments $@11 . COLON standard_type SEMICOLON

    COLON  shift, and go to state 82


State 67

   32 subprogram_head: PROCEDURE id $@12 arguments $@13 . SEMICOLON

    SEMICOLON  shift, and go to state 83


State 68

   56 statement: IF $@19 . expression $@20 THEN statement $@21 ELSE $@22 statement

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num                go to state 87
    id                 go to state 88
    expression         go to state 89
    boolexpression     go to state 90
    simple_expression  go to state 91
    term               go to state 92
    factor             go to state 93


State 69

   59 statement: WHILE $@23 . expression $@24 DO statement

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num                go to state 87
    id                 go to state 88
    expression         go to state 94
    boolexpression     go to state 90
    simple_expression  go to state 91
    term               go to state 92
    factor             go to state 93


State 70

   63 tail: LBRAC . expression $@25 RBRAC tail

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num                go to state 87
    id                 go to state 88
    expression         go to state 95
    boolexpression     go to state 90
    simple_expression  go to state 91
    term               go to state 92
    factor             go to state 93


State 71

   67 procedure_statement: id LPAREN . $@26 expression_list RPAREN

    $default  reduce using rule 66 ($@26)

    $@26  go to state 96


State 72

   61 variable: id tail .

    $default  reduce using rule 61 (variable)


State 73

   43 compound_statement: PBEGIN $@17 optional_statements END .

    $default  reduce using rule 43 (compound_statement)


State 74

   48 statement_list: statement_list SEMICOLON . $@18 statement

    $default  reduce using rule 47 ($@18)

    $@18  go to state 97


State 75

   49 statement: variable ASSIGNMENT . expression

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num                go to state 87
    id                 go to state 88
    expression         go to state 98
    boolexpression     go to state 90
    simple_expression  go to state 91
    term               go to state 92
    factor             go to state 93


State 76

   26 subprogram_declaration: subprogram_head $@8 declarations subprogram_declarations $@9 . compound_statement

    PBEGIN  shift, and go to state 29

    compound_statement  go to state 99


State 77

   10 num: MINUS DIGSEQ .

    $default  reduce using rule 10 (num)


State 78

   18 type: ARRAY LBRAC num DOTDOT . num RBRAC OF type

    DIGSEQ      shift, and go to state 60
    MINUS       shift, and go to state 61
    REALNUMBER  shift, and go to state 62

    num  go to state 100


State 79

   40 optional_var: VAR .

    $default  reduce using rule 40 (optional_var)


State 80

   34 arguments: LPAREN $@14 parameter_list . RPAREN

    RPAREN  shift, and go to state 101


State 81

   36 parameter_list: optional_var . identifier_list COLON type
   39               | optional_var . identifier_list COLON type $@15 SEMICOLON $@16 parameter_list

    IDENTIFIER  shift, and go to state 3

    id               go to state 9
    identifier_list  go to state 102


State 82

   29 subprogram_head: FUNCTION id $@10 arguments $@11 COLON . standard_type SEMICOLON

    STRING   shift, and go to state 34
    INTEGER  shift, and go to state 35
    REAL     shift, and go to state 36

    standard_type  go to state 103


State 83

   32 subprogram_head: PROCEDURE id $@12 arguments $@13 SEMICOLON .

    $default  reduce using rule 32 (subprogram_head)


State 84

   90 factor: LPAREN . $@33 expression RPAREN

    $default  reduce using rule 89 ($@33)

    $@33  go to state 104


State 85

   91 factor: NOT . factor

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num     go to state 87
    id      go to state 88
    factor  go to state 105


State 86

   88 factor: STRINGCONST .

    $default  reduce using rule 88 (factor)


State 87

   87 factor: num .

    $default  reduce using rule 87 (factor)


State 88

   83 factor: id . tail
   86       | id . $@31 LPAREN $@32 expression_list RPAREN

    LBRAC  shift, and go to state 70

    LPAREN    reduce using rule 84 ($@31)
    $default  reduce using rule 64 (tail)

    tail  go to state 106
    $@31  go to state 107


State 89

   56 statement: IF $@19 expression . $@20 THEN statement $@21 ELSE $@22 statement

    $default  reduce using rule 53 ($@20)

    $@20  go to state 108


State 90

   70 expression: boolexpression .
   72           | boolexpression . $@27 AND boolexpression
   74           | boolexpression . $@28 OR boolexpression

    AND       reduce using rule 71 ($@27)
    OR        reduce using rule 73 ($@28)
    $default  reduce using rule 70 (expression)

    $@27  go to state 109
    $@28  go to state 110


State 91

   75 boolexpression: simple_expression .
   76               | simple_expression . relop simple_expression
   79 simple_expression: simple_expression . addop $@29 term

    EQUAL     shift, and go to state 111
    GE        shift, and go to state 112
    GT        shift, and go to state 113
    LE        shift, and go to state 114
    LT        shift, and go to state 115
    MINUS     shift, and go to state 116
    notEQUAL  shift, and go to state 117
    PLUS      shift, and go to state 118

    $default  reduce using rule 75 (boolexpression)

    addop  go to state 119
    relop  go to state 120


State 92

   77 simple_expression: term .
   82 term: term . mulop $@30 factor

    SLASH  shift, and go to state 121
    STAR   shift, and go to state 122

    $default  reduce using rule 77 (simple_expression)

    mulop  go to state 123


State 93

   80 term: factor .

    $default  reduce using rule 80 (term)


State 94

   59 statement: WHILE $@23 expression . $@24 DO statement

    $default  reduce using rule 58 ($@24)

    $@24  go to state 124


State 95

   63 tail: LBRAC expression . $@25 RBRAC tail

    $default  reduce using rule 62 ($@25)

    $@25  go to state 125


State 96

   67 procedure_statement: id LPAREN $@26 . expression_list RPAREN

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num                go to state 87
    id                 go to state 88
    expression_list    go to state 126
    expression         go to state 127
    boolexpression     go to state 90
    simple_expression  go to state 91
    term               go to state 92
    factor             go to state 93


State 97

   48 statement_list: statement_list SEMICOLON $@18 . statement

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 49
    PBEGIN      shift, and go to state 29
    WHILE       shift, and go to state 50

    $default  reduce using rule 60 (statement)

    id                   go to state 51
    compound_statement   go to state 52
    statement            go to state 128
    variable             go to state 56
    procedure_statement  go to state 57


State 98

   49 statement: variable ASSIGNMENT expression .

    $default  reduce using rule 49 (statement)


State 99

   26 subprogram_declaration: subprogram_head $@8 declarations subprogram_declarations $@9 compound_statement .

    $default  reduce using rule 26 (subprogram_declaration)


State 100

   18 type: ARRAY LBRAC num DOTDOT num . RBRAC OF type

    RBRAC  shift, and go to state 129


State 101

   34 arguments: LPAREN $@14 parameter_list RPAREN .

    $default  reduce using rule 34 (arguments)


State 102

   13 identifier_list: identifier_list . COMMA id
   36 parameter_list: optional_var identifier_list . COLON type
   39               | optional_var identifier_list . COLON type $@15 SEMICOLON $@16 parameter_list

    COLON  shift, and go to state 130
    COMMA  shift, and go to state 11


State 103

   29 subprogram_head: FUNCTION id $@10 arguments $@11 COLON standard_type . SEMICOLON

    SEMICOLON  shift, and go to state 131


State 104

   90 factor: LPAREN $@33 . expression RPAREN

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num                go to state 87
    id                 go to state 88
    expression         go to state 132
    boolexpression     go to state 90
    simple_expression  go to state 91
    term               go to state 92
    factor             go to state 93


State 105

   91 factor: NOT factor .

    $default  reduce using rule 91 (factor)


State 106

   83 factor: id tail .

    $default  reduce using rule 83 (factor)


State 107

   86 factor: id $@31 . LPAREN $@32 expression_list RPAREN

    LPAREN  shift, and go to state 133


State 108

   56 statement: IF $@19 expression $@20 . THEN statement $@21 ELSE $@22 statement

    THEN  shift, and go to state 134


State 109

   72 expression: boolexpression $@27 . AND boolexpression

    AND  shift, and go to state 135


State 110

   74 expression: boolexpression $@28 . OR boolexpression

    OR  shift, and go to state 136


State 111

   98 relop: EQUAL .

    $default  reduce using rule 98 (relop)


State 112

  100 relop: GE .

    $default  reduce using rule 100 (relop)


State 113

   97 relop: GT .

    $default  reduce using rule 97 (relop)


State 114

   99 relop: LE .

    $default  reduce using rule 99 (relop)


State 115

   96 relop: LT .

    $default  reduce using rule 96 (relop)


State 116

   93 addop: MINUS .

    $default  reduce using rule 93 (addop)


State 117

  101 relop: notEQUAL .

    $default  reduce using rule 101 (relop)


State 118

   92 addop: PLUS .

    $default  reduce using rule 92 (addop)


State 119

   79 simple_expression: simple_expression addop . $@29 term

    $default  reduce using rule 78 ($@29)

    $@29  go to state 137


State 120

   76 boolexpression: simple_expression relop . simple_expression

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num                go to state 87
    id                 go to state 88
    simple_expression  go to state 138
    term               go to state 92
    factor             go to state 93


State 121

   95 mulop: SLASH .

    $default  reduce using rule 95 (mulop)


State 122

   94 mulop: STAR .

    $default  reduce using rule 94 (mulop)


State 123

   82 term: term mulop . $@30 factor

    $default  reduce using rule 81 ($@30)

    $@30  go to state 139


State 124

   59 statement: WHILE $@23 expression $@24 . DO statement

    DO  shift, and go to state 140


State 125

   63 tail: LBRAC expression $@25 . RBRAC tail

    RBRAC  shift, and go to state 141


State 126

   67 procedure_statement: id LPAREN $@26 expression_list . RPAREN
   69 expression_list: expression_list . COMMA expression

    COMMA   shift, and go to state 142
    RPAREN  shift, and go to state 143


State 127

   68 expression_list: expression .

    $default  reduce using rule 68 (expression_list)


State 128

   48 statement_list: statement_list SEMICOLON $@18 statement .

    $default  reduce using rule 48 (statement_list)


State 129

   18 type: ARRAY LBRAC num DOTDOT num RBRAC . OF type

    OF  shift, and go to state 144


State 130

   36 parameter_list: optional_var identifier_list COLON . type
   39               | optional_var identifier_list COLON . type $@15 SEMICOLON $@16 parameter_list

    ARRAY    shift, and go to state 33
    STRING   shift, and go to state 34
    INTEGER  shift, and go to state 35
    REAL     shift, and go to state 36

    type           go to state 145
    standard_type  go to state 38


State 131

   29 subprogram_head: FUNCTION id $@10 arguments $@11 COLON standard_type SEMICOLON .

    $default  reduce using rule 29 (subprogram_head)


State 132

   90 factor: LPAREN $@33 expression . RPAREN

    RPAREN  shift, and go to state 146


State 133

   86 factor: id $@31 LPAREN . $@32 expression_list RPAREN

    $default  reduce using rule 85 ($@32)

    $@32  go to state 147


State 134

   56 statement: IF $@19 expression $@20 THEN . statement $@21 ELSE $@22 statement

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 49
    PBEGIN      shift, and go to state 29
    WHILE       shift, and go to state 50

    $default  reduce using rule 60 (statement)

    id                   go to state 51
    compound_statement   go to state 52
    statement            go to state 148
    variable             go to state 56
    procedure_statement  go to state 57


State 135

   72 expression: boolexpression $@27 AND . boolexpression

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num                go to state 87
    id                 go to state 88
    boolexpression     go to state 149
    simple_expression  go to state 91
    term               go to state 92
    factor             go to state 93


State 136

   74 expression: boolexpression $@28 OR . boolexpression

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num                go to state 87
    id                 go to state 88
    boolexpression     go to state 150
    simple_expression  go to state 91
    term               go to state 92
    factor             go to state 93


State 137

   79 simple_expression: simple_expression addop $@29 . term

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num     go to state 87
    id      go to state 88
    term    go to state 151
    factor  go to state 93


State 138

   76 boolexpression: simple_expression relop simple_expression .
   79 simple_expression: simple_expression . addop $@29 term

    MINUS  shift, and go to state 116
    PLUS   shift, and go to state 118

    $default  reduce using rule 76 (boolexpression)

    addop  go to state 119


State 139

   82 term: term mulop $@30 . factor

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num     go to state 87
    id      go to state 88
    factor  go to state 152


State 140

   59 statement: WHILE $@23 expression $@24 DO . statement

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 49
    PBEGIN      shift, and go to state 29
    WHILE       shift, and go to state 50

    $default  reduce using rule 60 (statement)

    id                   go to state 51
    compound_statement   go to state 52
    statement            go to state 153
    variable             go to state 56
    procedure_statement  go to state 57


State 141

   63 tail: LBRAC expression $@25 RBRAC . tail

    LBRAC  shift, and go to state 70

    $default  reduce using rule 64 (tail)

    tail  go to state 154


State 142

   69 expression_list: expression_list COMMA . expression

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num                go to state 87
    id                 go to state 88
    expression         go to state 155
    boolexpression     go to state 90
    simple_expression  go to state 91
    term               go to state 92
    factor             go to state 93


State 143

   67 procedure_statement: id LPAREN $@26 expression_list RPAREN .

    $default  reduce using rule 67 (procedure_statement)


State 144

   18 type: ARRAY LBRAC num DOTDOT num RBRAC OF . type

    ARRAY    shift, and go to state 33
    STRING   shift, and go to state 34
    INTEGER  shift, and go to state 35
    REAL     shift, and go to state 36

    type           go to state 156
    standard_type  go to state 38


State 145

   36 parameter_list: optional_var identifier_list COLON type .
   39               | optional_var identifier_list COLON type . $@15 SEMICOLON $@16 parameter_list

    SEMICOLON  reduce using rule 37 ($@15)
    $default   reduce using rule 36 (parameter_list)

    $@15  go to state 157


State 146

   90 factor: LPAREN $@33 expression RPAREN .

    $default  reduce using rule 90 (factor)


State 147

   86 factor: id $@31 LPAREN $@32 . expression_list RPAREN

    DIGSEQ       shift, and go to state 60
    IDENTIFIER   shift, and go to state 3
    LPAREN       shift, and go to state 84
    MINUS        shift, and go to state 61
    NOT          shift, and go to state 85
    STRINGCONST  shift, and go to state 86
    REALNUMBER   shift, and go to state 62

    num                go to state 87
    id                 go to state 88
    expression_list    go to state 158
    expression         go to state 127
    boolexpression     go to state 90
    simple_expression  go to state 91
    term               go to state 92
    factor             go to state 93


State 148

   56 statement: IF $@19 expression $@20 THEN statement . $@21 ELSE $@22 statement

    $default  reduce using rule 54 ($@21)

    $@21  go to state 159


State 149

   72 expression: boolexpression $@27 AND boolexpression .

    $default  reduce using rule 72 (expression)


State 150

   74 expression: boolexpression $@28 OR boolexpression .

    $default  reduce using rule 74 (expression)


State 151

   79 simple_expression: simple_expression addop $@29 term .
   82 term: term . mulop $@30 factor

    SLASH  shift, and go to state 121
    STAR   shift, and go to state 122

    $default  reduce using rule 79 (simple_expression)

    mulop  go to state 123


State 152

   82 term: term mulop $@30 factor .

    $default  reduce using rule 82 (term)


State 153

   59 statement: WHILE $@23 expression $@24 DO statement .

    $default  reduce using rule 59 (statement)


State 154

   63 tail: LBRAC expression $@25 RBRAC tail .

    $default  reduce using rule 63 (tail)


State 155

   69 expression_list: expression_list COMMA expression .

    $default  reduce using rule 69 (expression_list)


State 156

   18 type: ARRAY LBRAC num DOTDOT num RBRAC OF type .

    $default  reduce using rule 18 (type)


State 157

   39 parameter_list: optional_var identifier_list COLON type $@15 . SEMICOLON $@16 parameter_list

    SEMICOLON  shift, and go to state 160


State 158

   69 expression_list: expression_list . COMMA expression
   86 factor: id $@31 LPAREN $@32 expression_list . RPAREN

    COMMA   shift, and go to state 142
    RPAREN  shift, and go to state 161


State 159

   56 statement: IF $@19 expression $@20 THEN statement $@21 . ELSE $@22 statement

    ELSE  shift, and go to state 162


State 160

   39 parameter_list: optional_var identifier_list COLON type $@15 SEMICOLON . $@16 parameter_list

    $default  reduce using rule 38 ($@16)

    $@16  go to state 163


State 161

   86 factor: id $@31 LPAREN $@32 expression_list RPAREN .

    $default  reduce using rule 86 (factor)


State 162

   56 statement: IF $@19 expression $@20 THEN statement $@21 ELSE . $@22 statement

    $default  reduce using rule 55 ($@22)

    $@22  go to state 164


State 163

   39 parameter_list: optional_var identifier_list COLON type $@15 SEMICOLON $@16 . parameter_list

    VAR  shift, and go to state 79

    $default  reduce using rule 41 (optional_var)

    parameter_list  go to state 165
    optional_var    go to state 81


State 164

   56 statement: IF $@19 expression $@20 THEN statement $@21 ELSE $@22 . statement

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 49
    PBEGIN      shift, and go to state 29
    WHILE       shift, and go to state 50

    $default  reduce using rule 60 (statement)

    id                   go to state 51
    compound_statement   go to state 52
    statement            go to state 166
    variable             go to state 56
    procedure_statement  go to state 57


State 165

   39 parameter_list: optional_var identifier_list COLON type $@15 SEMICOLON $@16 parameter_list .

    $default  reduce using rule 39 (parameter_list)


State 166

   56 statement: IF $@19 expression $@20 THEN statement $@21 ELSE $@22 statement .

    $default  reduce using rule 56 (statement)
